version: '3'
vars:
  PACKAGE_NAME: 'wms'
  APP_NAME: 'whats-my-status'
  APP_ID: 'com.github.jordangarrison.whats-my-status'
  VERSION: '0.3.1'

tasks:
  # Test and Build the package
  build:
    cmds:
      - task: mod
      - task: test
      - task: build_all

  # Build all architectures
  build_all:
    deps:
      - task: build_linux_amd64
      - task: build_linux_arm64
      - task: build_linux_arm
      - task: build_darwin_amd64
      - task: build_windows_amd64

  # Architecture specific build tasks
  build_linux_amd64:
    dir: ./wms
    cmds:
      - env GOOS=linux GOARCH=amd64 go build -v -o ../build/{{.PACKAGE_NAME}}-linux-amd64-{{.VERSION}}

  build_linux_arm:
    dir: ./wms
    cmds:
      - env GOOS=linux GOARCH=arm go build -v -o ../build/{{.PACKAGE_NAME}}-linux-arm-{{.VERSION}}

  build_linux_arm64:
    dir: ./wms
    cmds:
      - env GOOS=linux GOARCH=arm64 go build -v -o ../build/{{.PACKAGE_NAME}}-linux-arm64-{{.VERSION}}

  build_darwin_amd64:
    dir: ./wms
    cmds:
      - env GOOS=darwin GOARCH=amd64 go build -v -o ../build/{{.PACKAGE_NAME}}-darwin-amd64-{{.VERSION}}

  build_windows_amd64:
    dir: ./wms
    cmds:
      - env GOOS=windows GOARCH=amd64 go build -v -o ../build/{{.PACKAGE_NAME}}-windows-amd64-{{.VERSION}}.exe

  # build the guis
  build_gui:
    cmds:
      - task: build_gui_linux
      # - task: build_gui_freebsd
      # - task: build_gui_android
      # - task: build_gui_darwin
      # - task: build_gui_ios
      - task: build_gui_windows

  build_gui_linux:
    cmds:
      - fyne-cross linux --pull --name={{.APP_NAME}}-{{.VERSION}} --app-version={{.VERSION}} --release --app-id={{.APP_ID}}

  build_gui_freebsd:
    cmds:
      - fyne-cross freebsd --pull --name={{.APP_NAME}}-{{.VERSION}} --app-version={{.VERSION}} --release --app-id={{.APP_ID}}

  build_gui_android:
    cmds:
      - fyne-cross android --pull --name={{.APP_NAME}}-{{.VERSION}} --app-version={{.VERSION}} --release --app-id={{.APP_ID}}
  
  build_gui_darwin:
    cmds:
      - fyne-cross darwin --name={{.APP_NAME}}-{{.VERSION}} --app-version={{.VERSION}} --app-id={{.APP_ID}}
      - task: zip_gui_darwin

  build_gui_ios:
    cmds:
      - fyne-cross ios --pull --name={{.APP_NAME}}-{{.VERSION}} --app-version={{.VERSION}} --release --app-id={{.APP_ID}}
  
  build_gui_windows:
    cmds:
      - fyne-cross windows --pull --name={{.APP_NAME}}-{{.VERSION}}.exe --app-version={{.VERSION}} --app-id={{.APP_ID}}

  zip_gui_darwin:
    cmds:
      - zip -r {{.APP_NAME}}-{{.VERSION}}.app.zip {{.APP_NAME}}-{{.VERSION}}.app
    dir: ./fyne-cross/dist/darwin-amd64

  clean_gui:
    cmds:
      - rm -rf fyne-cross
      - rm -rf whats-my-status.exe.syso

  # Clean the build directory
  clean_cli:
    cmds:
      - rm -rf build

  clean:
    deps:
      - task: clean_cli
      - task: clean_gui

  clean_build_gui:
    deps:
      - task: clean_gui
    cmds:
      - task: build_gui

  # Clean and build the package
  clean_build:
    deps:
      - clean
    cmds:
      - task: build
      - task: build_gui

  # Install scripts
  local_install:
    deps:
      - clean_build
    cmds:
      - mkdir -p ~/bin
      - |
        OS=$(uname)
        MACHINE_TYPE=`uname -m`
        if [[ ${MACHINE_TYPE} == 'x86_64' ]]; then
          if [[ ${OS} == 'Linux' ]]; then
            cp build/{{.PACKAGE_NAME}}-linux-amd64-{{.VERSION}} ~/bin/{{.PACKAGE_NAME}}
          fi
        fi


  # Validation tasks
  mod:
    cmds:
      - go mod tidy
  test:
    cmds:
      - go vet ./...
      - go test -count=1 -v ./...

  # Publish the package
  release:
    deps:
      - clean_build
    cmds:
      - |
        gh release create v{{.VERSION}} \
          --title "Release v{{.VERSION}}" \
          --notes-file changelog.md \
          --draft \
          './build/{{.PACKAGE_NAME}}-linux-amd64-{{.VERSION}}#CLI Linux Amd64' \
          './build/{{.PACKAGE_NAME}}-linux-arm-{{.VERSION}}#CLI Linux Arm' \
          './build/{{.PACKAGE_NAME}}-linux-arm64-{{.VERSION}}#CLI Linux Arm64' \
          './build/{{.PACKAGE_NAME}}-darwin-amd64-{{.VERSION}}#CLI MacOs Amd64' \
          './build/{{.PACKAGE_NAME}}-windows-amd64-{{.VERSION}}.exe#CLI Windows Amd64' \
          './fyne-cross/dist/linux-amd64/{{.APP_NAME}}-{{.VERSION}}.tar.xz#GUI Linux Amd64' \
          './fyne-cross/dist/darwin-amd64/{{.APP_NAME}}-{{.VERSION}}.zip#GUI MacOS Amd64' \
          './fyne-cross/dist/windows-amd64/{{.APP_NAME}}-{{.VERSION}}.exe.zip#GUI Windows Amd64'